trigger:
  batch: true
  branches:
    include:
    - '*'
  paths:
    exclude:
      - README.md
      - LICENSE
      - .github
stages:

- stage: onRelease
  variables:
    - group: releaseVariables
  condition: |
    eq(variables['Build.SourceBranch'], 'refs/heads/releases')
  jobs:
  - job: onReleaseJob
    pool:
      vmImage: 'ubuntu-20.04'

    steps:
    - script: env | sort
      displayName: 'Environment / Context'
    
    - task: UsePythonVersion@0
      displayName: 'Use Python 3.8'
      inputs:
        versionSpec: 3.8
    
    - task: AzureCLI@2
      inputs:
        azureSubscription: dlt_dabs_sp_connection
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "Getting access token..."
          DATABRICKS_TOKEN=$(az account get-access-token --resource 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d --query "accessToken" -o tsv)
          echo "##vso[task.setvariable variable=DATABRICKS_TOKEN]$DATABRICKS_TOKEN"
        
    # - script: |
    #     echo "Using the token... (just test, you can remove)"
    #     echo $(DATABRICKS_TOKEN)
    #   displayName: 'Display the token'

    - checkout: self
      displayName: 'Checkout & Build.Reason: $(Build.Reason) & Build.SourceBranchName: $(Build.SourceBranchName)'

    - script: |
            python -m pip install wheel
            python -m pip install -r requirements.txt
      displayName: 'Install dependencies' 
      
    - script: |
        echo Instalando o CLI do Databricks...
        curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
      displayName: 'Instalar CLI do Databricks'
    
    - script: |
        echo Configurando o CLI do Databricks...
        databricks configure --token
        echo -e "[DATABRICKS_HOST]\n[DATABRICKS_TOKEN]" | databricks configure --token
      env:
        DATABRICKS_HOST: $(DATABRICKS_HOST)
        DATABRICKS_TOKEN: $(DATABRICKS_TOKEN)
      displayName: 'Configurar CLI do Databricks'
    - script: |
        databricks bundle validate -t $(env)
      displayName: Validate bundle for $(env) enviroment

    - script: |
        echo Deploy do bundle via CLI do Databricks...
        databricks bundle deploy -t $(env)
      displayName: Deploy job on $(env) enviroment

    - script: |
        echo Running job
        databricks bundle run dabs_test_job -t $(env)
      displayName: Run simpleworkflow on $(env) enviroment

    - script: |
        echo Running DLT pipeline
        databricks bundle run dabs_test_pipeline -t $(env)
      displayName: Run simpleworkflow on $(env) enviroment

    - task: PublishTestResults@2
      condition: succeededOrFailed()
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '**/test-*.xml' 
        failTaskOnFailedTests: true

      
# - stage: toProduction
#   variables:
#     - group: PrdVariables
#   condition: |
#     eq(variables['Build.SourceBranch'], 'refs/heads/main')
#   dependsOn: onRelease
#   jobs:
#   - job: onReleaseJob
#     pool:
#       vmImage: 'ubuntu-20.04'

#     steps:
#     - script: env | sort
#       displayName: 'Environment / Context'

#     - task: UsePythonVersion@0
#       displayName: 'Use Python 3.8'
#       inputs:
#         versionSpec: 3.8

#     - checkout: self
#       persistCredentials: true
#       clean: true
#       displayName: 'Checkout & Build.Reason: $(Build.Reason) & Build.SourceBranchName: $(Build.SourceBranchName)'

#     - task: AzureCLI@2
#       inputs:
#         azureSubscription: alfeutestspnovo
#         scriptType: 'bash'
#         scriptLocation: 'inlineScript'
#         inlineScript: |
#           echo "Getting access token..."
#           DATABRICKS_TOKEN=$(az account get-access-token --resource 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d --query "accessToken" -o tsv)
#           echo "##vso[task.setvariable variable=DATABRICKS_TOKEN]$DATABRICKS_TOKEN"

#     - script: |
#           python -m pip install --upgrade pip nutter
#           # this is because of the old dependency inside Nutter
#           python -m pip install wheel
#           python -m pip install setuptools
#       displayName: 'Install dependencies' 

#     - script: |
#         echo Instalando o CLI do Databricks...
#         curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
#       displayName: 'Instalar CLI do Databricks'
    
#     - script: |
#         echo Configurando o CLI do Databricks...
#         databricks configure --token
#         echo -e "[DATABRICKS_HOST]\n[DATABRICKS_TOKEN]" | databricks configure --token
#       env:
#         DATABRICKS_HOST: $(DATABRICKS_HOST)
#         DATABRICKS_TOKEN: $(DATABRICKS_TOKEN)
#       displayName: 'Configurar CLI do Databricks'

#     - script: |
#         databricks bundle validate -t $(env)
#       displayName: Validate bundle for $(env) enviroment

#     - script: |
#         echo Deploy do bundle via CLI do Databricks...
#         databricks bundle deploy -t $(env) 
#       displayName: Deploy job on $(env) enviroment
